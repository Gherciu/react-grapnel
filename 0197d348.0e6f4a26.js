(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{123:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return m}));var r=t(0),c=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var p=c.a.createContext({}),l=function(e){var n=c.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i({},n,{},e)),t},s=function(e){var n=l(e.components);return c.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},b=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),s=l(t),b=r,m=s["".concat(a,".").concat(b)]||s[b]||d[b]||o;return t?c.a.createElement(m,i({ref:n},p,{components:t})):c.a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=b;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<o;p++)a[p]=t[p];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return l}));var r=t(1),c=t(6),o=(t(0),t(123)),a={id:"doc-api-use-counter",title:"useCounter",sidebar_label:"useCounter"},i={id:"doc-api-use-counter",title:"useCounter",description:"A hook that tracks state of a number",source:"@site/docs\\doc-api-use-counter.md",permalink:"/react-grapnel/docs/doc-api-use-counter",editUrl:"https://github.com/Gherciu/react-grapnel/edit/master/www/docs/doc-api-use-counter.md",sidebar_label:"useCounter",sidebar:"docs",previous:{title:"API Introduction",permalink:"/react-grapnel/docs/doc-api-introduction"},next:{title:"useWindowSize",permalink:"/react-grapnel/docs/doc-api-use-window-size"}},u=[],p={rightToc:u};function l(e){var n=e.components,t=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A hook that tracks state of a number"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"It can be used directly from ",Object(o.b)("inlineCode",{parentName:"li"},"react-grapnel")," package or installed separately via npm runing: ",Object(o.b)("inlineCode",{parentName:"li"},"npm i react-grapnel-use-counter"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport useCounter from 'react-grapnel-use-counter'\n\nconst App = () => {\n  const { count, increment, decrement } = useCounter(0)\n  return (\n    <div>\n      <button onClick={decrement}>-</button>\n      <span>{count}</span>\n      <button onClick={increment}>+</button>\n    </div>\n  )\n}\n")),Object(o.b)("p",null,"Or use via cdn:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'\x3c!--index.html--\x3e\n<script src="https://cdn.jsdelivr.net/npm/react-grapnel-use-counter@latest/build/index.js"><\/script>\n<script>\n  const App = () => {\n    const { count, increment, decrement } = reactGrapnelUseCounter(0)\n    return (\n      <div>\n        <button onClick={decrement}>-</button>\n        <span>{count}</span>\n        <button onClick={increment}>+</button>\n      </div>\n    )\n  }\n<\/script>\n')))}l.isMDXComponent=!0}}]);